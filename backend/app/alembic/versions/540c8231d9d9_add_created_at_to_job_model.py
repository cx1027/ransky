"""Add created_at to Job model

Revision ID: 540c8231d9d9
Revises: ec4faf05951d
Create Date: 2025-06-23 13:20:23.768489

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision = '540c8231d9d9'
down_revision = 'ec4faf05951d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    tables = inspector.get_table_names()
    if 'scoreanalysis' in tables:
        indexes = [ix['name'] for ix in inspector.get_indexes('scoreanalysis')]
        if 'ix_scoreanalysis_candidate_file_name' in indexes:
            op.drop_index('ix_scoreanalysis_candidate_file_name', table_name='scoreanalysis')
        op.drop_table('scoreanalysis')
    op.add_column('job', sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('job', 'created_at')
    op.create_table('scoreanalysis',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('candidate_file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('score_result', sa.VARCHAR(length=10000), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('scoreanalysis_job_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('scoreanalysis_pkey'))
    )
    op.create_index(op.f('ix_scoreanalysis_candidate_file_name'), 'scoreanalysis', ['candidate_file_name'], unique=False)
    # ### end Alembic commands ###
